{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "FIFO-Server-API",
    "description": "Api para o desafio do processo de seleção da FCamara"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Rotas Publicas"
    },
    {
      "name": "Localizacao"
    },
    {
      "name": "Localizacao Servico"
    },
    {
      "name": "Fila"
    },
    {
      "name": "Servico"
    },
    {
      "name": "Usuario"
    },
    {
      "name": "Cover"

    }
  ],
  "host": "fifo-server.herokuapp.com",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/admin/localization": {
      "post": {

        "tags": [
          "Localizacao"
        ],
        "summary": "Salva uma localizacao",
        "description": "Esta Operacao tem por objetivo salvar uma localizacao.",
        "operationId": "save",
        "parameters": [
          {
            "in": "body",
            "name": "localization",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Localization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso ao cadastrar nova localizacao.",
            "schema": {
              "$ref": "#/definitions/Localization"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI da localizacao cadastrada."
              }
            }
          },
          "400": {
            "description": "Cadastro inválido."
          },
          "401": {
            "description": "Cadastro não autorizado."
          },
          "500": {
            "description": "Erro interno ao tentar realizar cadastro."
          }
        }
      },
      "put": {
        "tags": [
          "Localizacao"
        ],
        "summary": "Atualiza uma localizacao",
        "description": "Esta operacao tem por objetivo atualizar uma localizacao",
        "operationId": "update",

        "parameters": [
          {
            "in": "body",
            "name": "localization",

            "description": "",

            "required": true,
            "schema": {
              "$ref": "#/definitions/Localization"
            }
          }
        ],
        "responses": {

          "400": {
            "description": "Id fornecido inválido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "405": {
            "description": "Erro de validacao."
          }
        }
      },
      "delete": {
        "tags": [
          "Localizacao"
        ],
        "summary": "Atualiza uma localizacao",
        "description": "Esta operacao tem por objetivo atualizar uma localizacao",
        "parameters": [
          {
            "in": "body",
            "name": "localization",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Localization"

            }
          }
        ],
        "responses": {
          "400": {
            "description": "Id fornecido invalido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar deletar."
          }
        }

      }
    },
    "/admin/localization/{id}": {
      "get": {
        "tags": [
          "Localizacao"
        ],
        "summary": "Recupera uma localizacao por id.",
        "description": "Esta operacao tem por objetivo realizar consulta de localizacao por id.",
        "operationId": "find",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true,
            "description": "Numero do id da localizacao"
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso ao consultar uma localizacao existente por id.",
            "schema": {
              "$ref": "#/definitions/Localization"
            }
          },
          "400": {
            "description": "Id fornecido invalido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar deletar."
          }
        }
      }
    },
    "/admin/service": {
      "post": {
        "tags": [
          "Servico"
        ],
        "summary": "Salva um servico.",
        "description": "Esta Operacao tem por objetivo salvar uma servico.",
        "operationId": "saveService",
        "parameters": [
          {
            "in": "body",
            "name": "service",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service"

            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso ao cadastrar novo servico.",
            "schema": {
              "$ref": "#/definitions/Service"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI do servico cadastrada."
              }
            }
          },
          "400": {
            "description": "Cadastro inválido."
          },
          "401": {
            "description": "Cadastro não autorizado."
          },
          "500": {
            "description": "Erro interno ao tentar realizar cadastro."
          }
        }
      },
      "delete": {
        "tags": [

          "Servico"

        ],
        "summary": "Consulta todos os servicos.",
        "operationId": "get",
        "description": "Esta operação tem por objetivo consultar todos os servicos",
        "responses": {
          "201": {
            "description": "Sucesso ao consultar todos os servicos..",
            "schema": {
              "$ref": "#/definitions/Services"
            }
          },
          "400": {
            "description": "Consulta inválida."
          },
          "401": {
            "description": "Consulta não autorizada."
          },
          "404": {
            "description": "Nenhum cliente encontrado para a consulta."

          },
          "500": {
            "description": "Erro interno ao tentar deletar."
          }
        }
      },
      "put": {
        "tags": [
          "Servico"
        ],
        "summary": "Atualiza uma servico",
        "description": "Esta operacao tem por objetivo atualizar um servico.",
        "operationId": "updateService",
        "parameters": [
          {
            "in": "body",
            "name": "service",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Id fornecido inválido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "405": {
            "description": "Erro de validacao."
          }
        }
      },
      "delete": {
        "tags": [
          "Servico"
        ],
        "summary": "Atualiza uma servico",
        "description": "Esta operacao tem por objetivo deletar uma servico",
        "parameters": [
          {
            "in": "body",
            "name": "localization",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Id fornecido invalido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar deletar."
          }
        }
      }
    },
    "/admin/service/{id}": {
      "get": {
        "tags": [
          "Servico"
        ],
        "summary": "Recupera uma Servico por id.",
        "description": "Esta operacao tem por objetivo realizar consulta de servico por id.",
        "operationId": "findService",

        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true,
            "description": "Numero do id da localizacao"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso ao consultar uma localizacao existente por id.",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "400": {
            "description": "Id fornecido invalido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar deletar."
          }
        }
      }
    },
    "/admin/user": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Consulta todos os usuarios.",
        "operationId": "getUser",
        "description": "Esta operação tem por objetivo consultar todos os usuarios",
        "responses": {
          "200": {
            "description": "Sucesso ao consultar todos os usuarios.",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "400": {
            "description": "Id fornecido invalido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar deletar."
          }
        }
      },
      "put": {
        "tags": [
          "Usuario"
        ],
        "summary": "Atualiza um usuario",
        "description": "Esta operacao tem por objetivo atualizar um usuario.",
        "operationId": "updateUser",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Id fornecido inválido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "405": {
            "description": "Erro de validacao."
          }
        }
      },
      "delete": {
        "tags": [
          "Usuario"
        ],
        "summary": "Deleta um usuario",
        "description": "Esta operacao tem por objetivo deletar um usuario",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Id fornecido invalido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar deletar."
          }
        }
      }
    },
    "/admin/user/{id}": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Recupera uma usuario por id.",
        "description": "Esta operacao tem por objetivo realizar consulta de usuario por id.",
        "operationId": "findUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true,
            "description": "Numero do id do usuario"
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso ao consultar um usuario existente por id.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Id fornecido invalido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar deletar."
          }
        }
      }
    },
    "/admin/localization_service": {
      "post": {
        "tags": [
          "Localizacao Servico"
        ],
        "summary": "Salva um localizacao servico.",
        "description": "Esta Operacao tem por objetivo salvar uma localizacao servico.",
        "operationId": "saveLocService",
        "parameters": [
          {
            "in": "body",
            "name": "service",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocalizationService"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso ao cadastrar novo servico.",
            "schema": {
              "$ref": "#/definitions/LocalizationService"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI da localizacao servico cadastrada."
              }
            }
          },
          "400": {
            "description": "Cadastro inválido."
          },
          "401": {
            "description": "Cadastro não autorizado."
          },
          "500": {
            "description": "Erro interno ao tentar realizar cadastro."
          }
        }
      },
      "put": {
        "tags": [
          "Localizacao Servico"
        ],
        "summary": "Atualiza uma localizacao servico",
        "description": "Esta operacao tem por objetivo atualizar uma localizacao servico.",
        "operationId": "updateLocService",
        "parameters": [
          {
            "in": "body",
            "name": "localization_service",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocalizationService"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Id fornecido inválido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },

          "405": {
            "description": "Erro de validacao."
          }
        }
      },
      "get": {
        "tags": [
          "Localizacao Servico"
        ],
        "summary": "Consulta todas as localizacoes servicos.",
        "operationId": "getLocService",
        "description": "Esta operação tem por objetivo consultar todos as localizacoes servicos",
        "responses": {
          "201": {
            "description": "Sucesso ao consultar todos os servicos..",
            "schema": {
              "$ref": "#/definitions/LocalizationServices"
            }
          },
          "400": {
            "description": "Consulta inválida."
          },
          "401": {
            "description": "Consulta não autorizada."
          },
          "404": {
            "description": "Nenhum cliente encontrado para a consulta."
          },
          "500": {
            "description": "Erro interno ao tentar realizar consulta."
          }
        }
      },
      "delete": {
        "tags": [
          "Localizacao Servico"
        ],
        "summary": "Deleta uma localizacao servco",
        "description": "Esta operacao tem por objetivo deletar uma localizacao servico",
        "parameters": [
          {
            "in": "body",
            "name": "localization_service",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocalizationService"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Id fornecido invalido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar deletar."
          }
        }
      }
    },
    "/admin/queue": {
      "post": {
        "tags": [
          "Fila"
        ],
        "summary": "Salva uma fila.",
        "description": "Esta Operacao tem por objetivo salvar uma fila.",
        "operationId": "saveQueue",
        "parameters": [
          {
            "in": "body",
            "name": "queue",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Queue"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso ao cadastrar nova fila.",
            "schema": {
              "$ref": "#/definitions/Queue"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI da nova fila cadastrada."
              }
            }
          },
          "400": {
            "description": "Cadastro inválido."
          },
          "401": {
            "description": "Cadastro não autorizado."
          },
          "500": {
            "description": "Erro interno ao tentar realizar cadastro."
          }
        }
      }
    },
    "/admin/localization_service": {
      "post": {
        "tags": [
       "Fila"

        ],
        "summary": "Consulta todas as filas.",
        "operationId": "getQueue",
        "description": "Esta operação tem por objetivo consultar todas as filas.",
        "responses": {
          "201": {

            "description": "Sucesso ao consultar todos os filas.",
            "schema": {
              "$ref": "#/definitions/Queues"
            }
          },
          "400": {
            "description": "Consulta inválida."
          },
          "401": {
            "description": "Consulta não autorizada."
          },
          "404": {
            "description": "Nenhuma fila encontrada para a consulta."

          },
          "500": {
            "description": "Erro interno ao tentar realizar cadastro."
          }
        }
      },
      "put": {
        "tags": [
          "Fila"
        ],
        "summary": "Atualiza uma fila",
        "description": "Esta operacao tem por objetivo atualizar uma fila.",
        "operationId": "updateQueue",
        "parameters": [
          {
            "in": "body",
            "name": "queue",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Queue"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Id fornecido inválido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "405": {
            "description": "Erro de validacao."
          }
        }
      },
      "delete": {
        "tags": [
          "Fila"
        ],
        "summary": "Deleta a fila",
        "description": "Esta operacao tem por objetivo deletar a fila",
        "parameters": [
          {
            "in": "body",
            "name": "queue",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Queue"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Id fornecido invalido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar deletar."
          }
        }
      }
    },
    "/admin/queue/{id}": {
      "get": {
        "tags": [
          "Localizacao Servico"
        ],
        "summary": "Recupera uma cover por id.",
        "description": "Esta operacao tem por objetivo realizar consulta de um cover por id.",
        "operationId": "findcover",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true,
            "description": "Numero do id do cover"
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso ao consultar uma cover existente por id.",
            "schema": {
              "$ref": "#/definitions/Cover"
            }
          },
          "400": {
            "description": "Id fornecido invalido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar deletar."
          }
        }
      }
    },
    "/admin/cover": {

      "post": {
        "tags": [
          "Cover"
        ],

        "summary": "Salva uma cover.",
        "description": "Esta Operacao tem por objetivo salvar uma cover.",
        "operationId": "saveCover",
        "parameters": [
          {
            "in": "body",
            "name": "cover",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cover"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso ao cadastrar nova cover.",
            "schema": {
              "$ref": "#/definitions/Cover"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI da nova cover cadastrada."
              }
            }
          },
          "400": {
            "description": "Cadastro inválido."
          },
          "401": {
            "description": "Cadastro não autorizado."
          },
          "500": {
            "description": "Erro interno ao tentar realizar cadastro."
          }
        }
      },
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Consulta todas as covers.",
        "operationId": "getCover",
        "description": "Esta operação tem por objetivo consultar todas as covers.",
        "responses": {
          "201": {
            "description": "Sucesso ao consultar todos os covers.",
            "schema": {
              "$ref": "#/definitions/Covers"
            }
          },
          "400": {
            "description": "Consulta inválida."
          },
          "401": {
            "description": "Consulta não autorizada."
          },
          "404": {
            "description": "Nenhuma cover encontrada para a consulta."
          },
          "500": {
            "description": "Erro interno ao tentar realizar consulta."
          }
        }
      },
      "put": {
        "tags": [
          "Cover"
        ],
        "summary": "Atualiza uma Cover",
        "description": "Esta operacao tem por objetivo atualizar uma fila.",
        "operationId": "updateCover",
        "parameters": [
          {
            "in": "body",
            "name": "cover",

            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cover"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Id fornecido inválido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "405": {
            "description": "Erro de validacao."
          }
        }
      },
      "delete": {
        "tags": [
          "Cover"
        ],
        "summary": "Deleta a Cover",
        "description": "Esta operacao tem por objetivo deletar a fila",
        "parameters": [
          {
            "in": "body",
            "name": "cover",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cover"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Id fornecido invalido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar deletar."
          }
        }
      }
    },
    "/admin/cover/{id}": {
      "get": {
        "tags": [
          "Cover"
        ],
        "summary": "Recupera uma fila por id.",
        "description": "Esta operacao tem por objetivo realizar consulta de fila por id.",
        "operationId": "findCover",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true,
            "description": "Numero do id da fila"
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso ao consultar uma fila existente por id.",
            "schema": {
              "$ref": "#/definitions/Queue"
            }
          },
          "400": {
            "description": "Id fornecido invalido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar deletar."
          }
        }
      }
    },
    "/localization": {
      "get": {
        "tags": [
          "Rotas Publicas"
        ],
        "summary": "Consulta todos as localizacoes.",
        "operationId": "getLocalization",
        "description": "Esta operação tem por objetivo consultar todos as localizacoes",
        "responses": {
          "201": {
            "description": "Sucesso ao consultar todos os clientes.",
            "schema": {
              "$ref": "#/definitions/Localizations"
            }
          },
          "400": {
            "description": "Consulta inválida."
          },
          "401": {
            "description": "Consulta não autorizada."
          },
          "404": {
            "description": "Nenhuma localizacao encontrada para a consulta."
          },
          "500": {
            "description": "Erro interno ao tentar realizar consulta."
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "Rotas Publicas"
        ],
        "summary": "Executa o login",
        "description": "Esta operacao tem por objetivo salvar uma usuario.",
        "operationId": "saveUser",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso ao cadastrar novo usuario.",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI do usuario cadastrado."
              }
            }
          },
          "400": {
            "description": "Cadastro inválido."
          },
          "401": {
            "description": "Cadastro não autorizado."
          },
          "500": {
            "description": "Erro interno no servidor de banco de dados"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "Rotas Publicas"
        ],
        "summary": "Salva um usuario",
        "description": "Esta operacao tem por objetivo salvar uma usuario.",
        "operationId": "saveUser1",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso ao cadastrar novo usuario.",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI do usuario cadastrado."
              }
            }
          },
          "400": {
            "description": "Cadastro inválido."
          },
          "401": {
            "description": "Cadastro não autorizado."
          },
          "500": {
            "description": "Erro interno no servidor de banco de dados"
          }
        }
      }
    },
    "/localization_service/{id}": {
      "get": {
        "tags": [
          "Rotas Publicas"
        ],
        "summary": "Recupera uma lista de servicos da localizacao por id.",
        "description": "Esta operacao tem por objetivo recuperar uma lista de servicos da localizacao por id.",
        "operationId": "findLocalization",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int32",
            "required": true,
            "description": "Numero do id da localizacao"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso ao consultar uma localizacao existente por id.",
            "schema": {
              "$ref": "#/definitions/LocalizationService"
            }
          },
          "400": {
            "description": "Id fornecido invalido."
          },
          "404": {
            "description": "Objeto não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar deletar."
          }
        }
      }
    },
    "/queue/entryQueue": {
      "post": {
        "tags": [
          "Rotas Publicas"
        ],
        "summary": "Salva uam fila.",
        "description": "Esta Operacao tem por objetivo salvar uma fila.",
        "operationId": "saveQueue1",
        "parameters": [
          {
            "in": "body",
            "name": "fila",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Queue"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso ao cadastrar novo servico.",
            "schema": {
              "$ref": "#/definitions/Queue"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI da fila cadastrada."
              }
            }
          },
          "400": {
            "description": "Cadastro inválido."
          },
          "401": {
            "description": "Cadastro não autorizado."
          },
          "500": {
            "description": "Erro interno ao tentar realizar cadastro."
          }
        }
      }
    },
    "/queue/statusQueue": {
      "post": {
        "tags": [
          "Rotas Publicas"
        ],
        "summary": "Salva uam fila.",
        "description": "Esta Operacao tem por objetivo salvar uma fila.",
        "operationId": "statusQueue",
        "parameters": [
          {
            "in": "body",
            "name": "fila",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Queue"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso ao cadastrar novo servico.",
            "schema": {
              "$ref": "#/definitions/Queue"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI da fila cadastrada."
              }
            }
          },
          "400": {
            "description": "Cadastro inválido."
          },
          "401": {
            "description": "Cadastro não autorizado."
          },
          "500": {
            "description": "Erro interno ao tentar realizar cadastro."
          }
        }
      }
    },
    "/queue/exitQueue": {
      "post": {
        "tags": [
          "Rotas Publicas"
        ],
        "summary": "Salva uam fila.",
        "description": "Esta Operacao tem por objetivo salvar uma fila.",
        "operationId": "exitQueue",
        "parameters": [
          {
            "in": "body",
            "name": "fila",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Queue"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso ao cadastrar novo servico.",
            "schema": {
              "$ref": "#/definitions/Queue"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI da fila cadastrada."
              }
            }
          },
          "400": {
            "description": "Cadastro inválido."
          },
          "401": {
            "description": "Cadastro não autorizado."
          },
          "500": {
            "description": "Erro interno ao tentar realizar cadastro."
          }
        }
      }
    }
  },
  "definitions": {
    "Users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id do usuario."
        },
        "name": {
          "type": "string",
          "description": "Nome do usuario"
        },
        "email": {
          "type": "string",
          "description": "email do usuario"
        },
        "cover": {
          "type": "string",
          "description": "Avatar do usuario"
        },
        "last_socket_id": {
          "type": "integer",
          "format": "int32",
          "description": "Id socket"
        },
        "localization_id": {
          "type": "integer",
          "format": "int32",
          "description": "Id localizacao"
        }
      }
    },
    "Localizations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Localization"
      }
    },
    "Localization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id da localizacao."
        },
        "description": {
          "type": "string",
          "description": "Descrição da localizacao"
        },
        "name": {
          "type": "string",
          "description": "Nome da localizacao."
        },
        "notes": {
          "type": "string",
          "description": "Anotações da localizacao."
        }
      }
    },
    "Services": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Service"
      }
    },
    "Service": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id do servico."
        },
        "description": {
          "type": "string",
          "description": "Descrição do servico"
        },
        "name": {
          "type": "string",
          "description": "Nome do servico."
        },
        "cover": {
          "type": "string",
          "description": "Avatar do servico."
        },
        "notes": {
          "type": "string",
          "description": "Anotacoes refrente ao servico."
        },
        "status": {
          "type": "string",
          "description": "Status do servico."
        }
      }
    },
    "Queues": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Queue"
      }
    },
    "Queue": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id da fila"
        },
        "localization_id": {
          "type": "integer",
          "format": "int32",
          "description": "Id da localizacao"
        },
        "service_id": {
          "type": "integer",
          "format": "int32",
          "description": "Id do servico"
        },
        "users_id": {
          "type": "integer",
          "format": "int32",
          "description": "Id do usuario"
        },
        "entry_queue": {
          "type": "string",
          "description": "Entrada na fila"
        },
        "entry_service": {
          "type": "string",
          "description": "Entrada do servico"
        },
        "status": {
          "type": "string",
          "description": "Status da fila"
        }
      }
    },
    "LocalizationServices": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/LocalizationService"
      }
    },
    "LocalizationService": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id da localizacaoXservico"
        },
        "localization_id": {
          "type": "integer",
          "format": "int32",
          "description": "Id da localizacao"
        },
        "service_id": {
          "type": "integer",
          "format": "int32",
          "description": "Id do servico"
        }
      }
    },
    "Covers": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Cover"
      }
    },
    "Cover": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id do avatar"
        },
        "url": {
          "type": "string",
          "description": "Url do avatar"
        },
        "category": {
          "type": "string",
          "description": "Categoria do avatar"
        }
      }
    }
  }
}